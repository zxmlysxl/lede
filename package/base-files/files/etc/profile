## 2021-2024 sirpdboy  herboy2008@gmail.com
Sysinfo() {
[ -z "${TARGET_PROFILE}" ] && local TARGET_PROFILE=$(jsonfilter -e '@.model.id' < /etc/board.json | tr ',' '_')
local DISTRIB_ARCH=$(cat /etc/openwrt_release | grep "DISTRIB_ARCH=" |awk -F "'" '{print $2}')
if grep -Eq "x86" "/etc/openwrt_release" ; then
	[ -d /sys/firmware/efi ] && ARCH=`echo ${DISTRIB_ARCH} - UEFI` || ARCH=`echo ${DISTRIB_ARCH} - BIOS`
else
	ARCH=${DISTRIB_ARCH}	
fi
local IP_Address=`ip -4 a | grep "br-lan" | grep "inet" | awk '{print $2}'`
local CPU_Model=$(awk -F ':[ ]' '/model name/{printf ($2);exit}' /proc/cpuinfo)
local Mem_sum=$(free | grep Mem | awk '{a=$2/1024} {printf("%dMB\n",a)}')
local Overlay_Available="$(df -h | grep ":/overlay" | awk '{print $4}' | awk 'NR==1')"
local Tmp_Available="$(df -h | grep "/tmp" | awk '{print $4}' | awk 'NR==1')"
local TEMP=$(sensors 2>/dev/null | grep 'Core 0' | awk '{print $3}')
local Sys_time=$(awk '{a=$1/86400;b=($1%86400)/3600;c=($1%3600)/60;d=($1%60)} {printf("%d 天 %d 小时 %d 分钟 %d 秒\n",a,b,c,d)}' /proc/uptime)
cat <<EOF
$(echo -e "${Yellow}$(uname -n)/${TARGET_PROFILE}")
$(echo -e "${Red}CPU    Model:	${CPU_Model}${White}")
$(echo -e "${Blue}Mem    Total:	${Mem_sum}${White}")
$(echo -e "${Green}TARGET  Info:	${ARCH}${White}")
FIRWare  Ver:	$(uname -rs)$([ -n "${TEMP}" ] && echo -e "${TEMP}")
$(echo -e "${Red}IPv4 Address:	${IP_Address}${White}")
Overlay /TMP:	${Overlay_Available} / ${Tmp_Available}
$(echo -e "${Red}Run     Time:	${Sys_time}${White}")
EOF
}


White="\e[0m"
Yellow="\e[33m"
Red="\e[31m"
Blue="\e[34m"
Grey="\e[36m"
Green="\e[32m"
Div="${Grey}|${White}"

function EY() {
  echo -e "${Yellow} $1${Font}"
}
function ER() {
  echo
  echo -e "${Red} $1${Font}"
}
function EB() {
  echo
  echo -e "${Blue} $1${Font}"
  echo
}
function EG() {
  echo -e "${Green} $1${Font}"
}
function EW() {
  echo -e "${White} $1${Font}"
}

clear
[ -e /tmp/.failsafe ] && export FAILSAFE=1
[ -f /etc/banner ] && echo -e "${Skyb}$(cat /etc/banner)${White}"
[ -n "$FAILSAFE" ] && cat /etc/banner.failsafe
if ( grep -qs '^root::' /etc/shadow && \
     [ -z "$FAILSAFE" ] )
then
cat << EOF
================== WARNING! ====================
There is no root password defined on this device!
Use the "passwd" command to set up a new password
in order to prevent unauthorized SSH logins.
------------------------------------------------
EOF
fi
Sysinfo

grep -Fsq '/ overlay ro,' /proc/mounts && {
	echo -e "${Red}Your JFFS2-partition seems full and overlayfs is mounted read-only."
	echo -e "Please try to remove files from /overlay/upper/... and reboot!${}"
}

export PATH="/usr/sbin:/usr/bin:/sbin:/bin"
export HOME=$(grep -e "^${USER:-root}:" /etc/passwd | cut -d ":" -f 6)
export HOME=${HOME:-/root}
export CONFIG=/etc/config
if [ -n "${TARGET_PROFILE}" ]
then
	export PS1='\u@\h[${TARGET_PROFILE}]:\w\$ '
else
	export PS1='\u@\h:\w\$ '
fi
export ENV=/etc/shinit

case "$TERM" in
	xterm*|rxvt*)
		export PS1='\[\e]0;\u@\h: \w\a\]'$PS1
		;;
esac
[ -x /bin/more ] || alias more='less'
[ -x /usr/bin/vim ] && alias vi='vim' || alias vim='vi'

alias menu='zsh'
alias dh='df -h'
alias ls='ls --color=auto'
alias top='top -d 1'

[ -n "$FAILSAFE" ] || {
	for FILE in /etc/profile.d/*.sh; do
		[ -e "$FILE" ] && . "$FILE"
	done
	unset FILE
}

EG " menu->调用菜单(Call Menu) 进阶设置可禁用/显示SSH登陆菜单 "
EW ""
/usr/bin/zsh
